// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/service/viaCep.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	service "github.com/kameikay/service-orchestration/internal/service"
)

// MockViaCepServiceInterface is a mock of ViaCepServiceInterface interface.
type MockViaCepServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockViaCepServiceInterfaceMockRecorder
}

// MockViaCepServiceInterfaceMockRecorder is the mock recorder for MockViaCepServiceInterface.
type MockViaCepServiceInterfaceMockRecorder struct {
	mock *MockViaCepServiceInterface
}

// NewMockViaCepServiceInterface creates a new mock instance.
func NewMockViaCepServiceInterface(ctrl *gomock.Controller) *MockViaCepServiceInterface {
	mock := &MockViaCepServiceInterface{ctrl: ctrl}
	mock.recorder = &MockViaCepServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockViaCepServiceInterface) EXPECT() *MockViaCepServiceInterfaceMockRecorder {
	return m.recorder
}

// GetCEPData mocks base method.
func (m *MockViaCepServiceInterface) GetCEPData(ctx context.Context, cep string) (*service.ViaCEPResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCEPData", ctx, cep)
	ret0, _ := ret[0].(*service.ViaCEPResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCEPData indicates an expected call of GetCEPData.
func (mr *MockViaCepServiceInterfaceMockRecorder) GetCEPData(ctx, cep interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCEPData", reflect.TypeOf((*MockViaCepServiceInterface)(nil).GetCEPData), ctx, cep)
}
